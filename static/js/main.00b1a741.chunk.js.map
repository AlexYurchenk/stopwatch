{"version":3,"sources":["components/counter/counter.module.css","components/counter/counter.js","services/timeTransformation.js","App.js","index.js"],"names":["module","exports","Counter","time","buttonList","onClick","className","styles","hero","counter","container","stopwatchScreen","map","value","index","number","button","id","timeTransformation","hours","Math","floor","minutes","seconds","propTypes","PropTypes","isRequired","App","useState","setTime","state","setState","stop","document","getElementById","wait","useEffect","stopClick","fromEvent","buffered","pipe","bufferTime","filter","v","length","subscribe","x","Observable","observer","interval","setInterval","next","clearInterval","takeUntil","prev","start","e","setTimeout","detail","delay","reset","ReactDOM","render","StrictMode"],"mappings":"kFACAA,EAAOC,QAAU,CAAC,KAAO,sBAAsB,QAAU,yBAAyB,UAAY,2BAA2B,gBAAkB,iCAAiC,OAAS,wBAAwB,WAAa,4BAA4B,OAAS,0B,4GCqChPC,EAnCC,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,KAAMC,EAA0B,EAA1BA,WAAYC,EAAc,EAAdA,QACnC,OACE,qCACE,oBAAIC,UAAWC,IAAOC,KAAtB,qBACA,yBAASF,UAAWC,IAAOE,QAA3B,SACE,sBAAKH,UAAWC,IAAOG,UAAvB,UACE,oBAAIJ,UAAWC,IAAOI,gBAAtB,SACGR,EAAKS,KAAI,SAACC,EAAOC,GAAR,OACR,6BACE,mBAAGR,UAAWC,IAAOQ,OAArB,SAA8BF,KADvBC,QAKb,oBAAIR,UAAWC,IAAOH,WAAtB,SACGA,EAAWQ,KAAI,SAACI,EAAQF,GAAT,OACd,6BACE,wBACEG,GAAID,EACJV,UAAWC,IAAOS,OAClBX,QAASA,EAAQW,GAHnB,SAKGA,KANIF,iB,wDChBR,SAASI,EAAmBf,GACzC,IAAMgB,EAAQC,KAAKC,MAAMlB,EAAO,MAChCA,GAAsB,KAARgB,EACd,IAAMG,EAAUF,KAAKC,MAAMlB,EAAO,IAE5BoB,GADNpB,GAAwB,GAAVmB,GACS,GACvB,MAAO,CAAC,GAAD,OAEHH,EAAQ,GAAKA,EAAQ,GACjB,KACAA,GAAS,GAAKA,GAAS,EAAvB,WACIA,GADJ,UAEGA,IANJ,UAQFG,EAAU,GAAkB,IAAZA,EAAgB,KAAhB,WAA2BA,GAA3C,UAA2DA,IARzD,UASFC,EAAU,GAAV,WAAmBA,GAAnB,UAAkCA,KAGzCL,EAAmBM,UAAY,CAC7BrB,KAAMsB,IAAUV,OAAOW,YCqDVC,MApEf,WAAgB,IAAD,EACWC,mBAAS,MADpB,mBACNzB,EADM,KACA0B,EADA,OAEaD,oBAAS,GAFtB,mBAENE,EAFM,KAECC,EAFD,KAIPC,EAAOC,SAASC,eAAe,QAC/BC,EAAOF,SAASC,eAAe,QAkCrC,OAjCAE,qBAAU,WACR,GAAIN,EAAO,CACT,IAAMO,EAAYC,YAAUN,EAAM,SAE5BO,EADYD,YAAUH,EAAM,SACPK,KACzBC,YAAW,KACXC,aAAO,SAACC,GAAD,OAAoB,IAAbA,EAAEC,WAElBL,EAASM,WAAU,SAACC,GAAD,OAAOA,EAAE,MAEb,IAAIC,KAAW,SAACC,GAC7B,IAAMC,EAAWC,aAAY,WAC3BF,EAASG,SACR,KAEH,OAAO,WACLC,cAAcH,OAKfT,KAAKa,YAAUhB,IACfG,KAAKa,YAAUd,IACfM,UAAU,CACTM,KAAM,YACU,IAAVrB,GACFD,GAAQ,SAACyB,GAAD,OAAUA,EAAO,WAKlC,CAACxB,EAAOE,EAAMG,IAGf,mCACE,cAAC,EAAD,CACEhC,KAAMe,EAAmBf,GACzBC,WAAY,CAAC,QAAS,OAAQ,OAAQ,SACtCC,QAAS,CACPkD,MAAO,kBAAMxB,GAAS,IACtBC,KAAM,SAACwB,GACLzB,GAAS,GACTF,EAAQ,IAEVM,KAAM,SAACqB,GAOLC,WALc,SAACD,GACI,IAAbA,EAAEE,QACJ3B,GAAS,GAGF4B,CANCH,GAMW,MAEzBI,MAAO,WACL/B,EAAQ,GACRE,GAAS,U,MC9DrB8B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF9B,SAASC,eAAe,W","file":"static/js/main.00b1a741.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"hero\":\"counter_hero__s7Ok9\",\"counter\":\"counter_counter__SHpH-\",\"container\":\"counter_container__1kwZ0\",\"stopwatchScreen\":\"counter_stopwatchScreen__297kI\",\"number\":\"counter_number__1Tm5W\",\"buttonList\":\"counter_buttonList__UPIIq\",\"button\":\"counter_button__1OWRH\"};","import styles from \"./counter.module.css\";\nimport PropTypes from \"prop-types\";\n\nconst Counter = ({ time, buttonList, onClick }) => {\n  return (\n    <>\n      <h1 className={styles.hero}>Counter</h1>\n      <section className={styles.counter}>\n        <div className={styles.container}>\n          <ul className={styles.stopwatchScreen}>\n            {time.map((value, index) => (\n              <li key={index}>\n                <p className={styles.number}>{value}</p>\n              </li>\n            ))}\n          </ul>\n          <ul className={styles.buttonList}>\n            {buttonList.map((button, index) => (\n              <li key={index}>\n                <button\n                  id={button}\n                  className={styles.button}\n                  onClick={onClick[button]}\n                >\n                  {button}\n                </button>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </section>\n    </>\n  );\n};\nCounter.propTypes = {\n  time: PropTypes.arrayOf(PropTypes.string),\n  buttonList: PropTypes.arrayOf(PropTypes.string),\n};\nexport default Counter;\n","import PropTypes from \"prop-types\";\n\nexport default function timeTransformation(time) {\n  const hours = Math.floor(time / 3600);\n  time = time - hours * 3600;\n  const minutes = Math.floor(time / 60);\n  time = time - minutes * 60;\n  const seconds = time % 60;\n  return [\n    `${\n      hours < 1 || hours > 23\n        ? \"00\"\n        : hours >= 1 && hours <= 9\n        ? `0${hours}`\n        : `${hours}`\n    }`,\n    `${minutes < 10 ? (minutes === 0 ? \"00\" : `0${minutes}`) : `${minutes}`}`,\n    `${seconds < 10 ? `0${seconds}` : `${seconds}`}`,\n  ];\n}\ntimeTransformation.propTypes = {\n  time: PropTypes.number.isRequired,\n};\n","import React, { useState, useEffect } from \"react\";\nimport Counter from \"./components/counter/counter\";\nimport { Observable, fromEvent } from \"rxjs\";\nimport { takeUntil, bufferTime, filter } from \"rxjs/operators\";\n\nimport timeTransformation from \"./services/timeTransformation\";\nfunction App() {\n  const [time, setTime] = useState(3600);\n  const [state, setState] = useState(false);\n\n  const stop = document.getElementById(\"stop\");\n  const wait = document.getElementById(\"wait\");\n  useEffect(() => {\n    if (state) {\n      const stopClick = fromEvent(stop, \"click\");\n      const waitClick = fromEvent(wait, \"click\");\n      const buffered = waitClick.pipe(\n        bufferTime(300),\n        filter((v) => v.length === 2)\n      );\n      buffered.subscribe((x) => x[0]);\n\n      const timer$ = new Observable((observer) => {\n        const interval = setInterval(() => {\n          observer.next();\n        }, 1000);\n\n        return () => {\n          clearInterval(interval);\n        };\n      });\n\n      timer$\n        .pipe(takeUntil(stopClick))\n        .pipe(takeUntil(buffered))\n        .subscribe({\n          next: () => {\n            if (state === true) {\n              setTime((prev) => prev + 1);\n            }\n          },\n        });\n    }\n  }, [state, stop, wait]);\n\n  return (\n    <>\n      <Counter\n        time={timeTransformation(time)}\n        buttonList={[\"start\", \"stop\", \"wait\", \"reset\"]}\n        onClick={{\n          start: () => setState(true),\n          stop: (e) => {\n            setState(false);\n            setTime(0);\n          },\n          wait: (e) => {\n            const evt = e;\n            const delay = (e) => {\n              if (e.detail === 2) {\n                setState(false);\n              }\n            };\n            setTimeout(delay(evt), 300);\n          },\n          reset: () => {\n            setTime(0);\n            setState(true);\n          },\n        }}\n      />\n    </>\n  );\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"../node_modules/modern-normalize/modern-normalize.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}